---
- block:
  - name: remove apache2 server
    apt: name=apache2 state=absent

  - name: install nginx
    apt: name=nginx state=present

  - name: remove default nginx config
    file: path=/etc/nginx/sites-enabled/default state=absent
    notify: restart nginx

  - block:
    - name: install openssl
      apt: name=openssl state=present

    - name: ensure {{ ssl_server_home }} exists
      file: path={{ ssl_server_home }} state=directory owner=root group=www-data mode=0750

    - name: create secure dh params
      command: openssl dhparam -out "{{ ssl_server_home }}/dhparam.pem" 2048
      args:
        creates: "{{ ssl_server_home }}/dhparam.pem"
      notify: restart nginx

    - name: provide template ssl good practices
      template: src="templates/inc_ssl_practices.conf.j2" dest=/etc/nginx/inc_ssl_practices.conf
      notify: restart nginx
    when: ssl_support

  - name: add general gzip compression support
    template: src="templates/gzip.conf.j2" dest=/etc/nginx/conf.d/gzip.conf
    when: gzip_support
    notify: restart nginx

  - block:
      - name: ensure fastcgi cache dir folder
        file: path={{ fastcgi_cache_path }} state=directory owner=root group=root recurse=yes

      - name: configure fastcgi cache
        template: src="templates/fastcgi_cache.conf.j2" dest=/etc/nginx/conf.d/fastcgi_cache.conf
    when: fastcgi_cache_enabled
    
  - block:
      - name: disable fastcgi cache
        file:
          path: /etc/nginx/conf.d/fastcgi_cache.conf
          state: absent
    when: fastcgi_cache_enabled is not defined or not fastcgi_cache_enabled

  - name: ensure nginx is setup as a service and running
    service: name=nginx enabled=yes state=started

  # @todo ufw playbook?
  - name: open ports in firewall
    ufw: rule=allow proto=tcp port={{ item }}
    with_items:
      - 80
      - 443
    tags: ufw
    notify: reload firewall
    when: firewall_disabled is not defined or not firewall_disabled

  become: true
  become_user: root
